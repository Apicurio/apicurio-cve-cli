package config

import (
	"fmt"
	"github.com/pkg/errors"
	"github.com/spf13/viper"
)

type AcvehConfiguration struct {
	JiraToken   string `mapstructure:"jira_token"`
	ProjectName string `mapstructure:"project_name"`
}

func InitConfiguration() {
	viper.SetConfigName("config.yml")
	viper.SetConfigType("yaml")
	viper.AddConfigPath("$HOME/.config/apicurio-cve-helper")
	viper.AddConfigPath(".")

	viper.SetDefault("jira_token", "")
	viper.SetDefault("project_name", "MGDSR")

	_ = viper.BindEnv("jira_token", "JIRA_TOKEN")

	err := viper.ReadInConfig()
	if err != nil {
		panic(fmt.Errorf("fatal error config file: %w", err))
	}
}

func GetConfiguration() AcvehConfiguration {
	cfg := AcvehConfiguration{}
	err := viper.Unmarshal(&cfg)
	if err != nil {
		_ = errors.Errorf("unable to decode into struct, %v", err)
	}
	return cfg
}
