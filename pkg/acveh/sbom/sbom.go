package sbom

import (
	"bufio"
	"os"
	"strings"
)

type SBom struct {
	Packages []SBomPackage
}

type SBomPackage struct {
	PackageName string
	Version     string
	Type        string
}

func GetSBomFromFile(file *os.File) (*SBom, error) {
	sBom := &SBom{
		Packages: make([]SBomPackage, 64),
	}
	_, err := file.Seek(0, 0)
	if err != nil {
		return nil, err
	}
	scanner := bufio.NewScanner(file)
	first := true
	for scanner.Scan() {
		if first {
			first = false
			continue
		}
		fields := strings.Fields(scanner.Text())
		if len(fields) < 3 {
			continue
		}
		sBomPackage := SBomPackage{
			PackageName: fields[0],
			Version:     fields[1],
			Type:        fields[2],
		}
		sBom.Packages = append(sBom.Packages, sBomPackage)
	}

	if err := scanner.Err(); err != nil {
		return nil, err
	}
	return sBom, nil
}

func (sBom *SBom) FindPackage(name string) *SBomPackage {
	for _, bomPackage := range sBom.Packages {
		if bomPackage.PackageName == name {
			return &bomPackage
		}
	}
	return nil
}
