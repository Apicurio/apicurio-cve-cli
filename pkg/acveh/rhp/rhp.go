package rhp

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CVEStatus struct {
	PackageState    []PackageState    `json:"package_state"`
	ThreatSeverity  string            `json:"threat_severity"`
	AffectedRelease []AffectedRelease `json:"affected_release"`
}

type PackageState struct {
	ProductName string `json:"product_name"`
	FixState    string `json:"fix_state"`
	PackageName string `json:"package_name"`
	Cpe         string `json:"cpe"`
}

type AffectedRelease struct {
	ProductName string `json:"product_name"`
	ReleaseDate string `json:"release_date"`
	Advisory    string `json:"advisory"`
	Package     string `json:"package"`
}

func GetCVEStatus(cve string) (*CVEStatus, error) {
	url := fmt.Sprintf("https://access.redhat.com/labs/securitydataapi/cve/%s.json", cve)
	resp, err := http.Get(url)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()
	cveStatus := CVEStatus{}
	err = json.NewDecoder(resp.Body).Decode(&cveStatus)
	if err != nil {
		return nil, err
	}
	return &cveStatus, nil
}
